{"ast":null,"code":"var _jsxFileName = \"/Users/virajparekh/cjv805/stream-go/src/pages/TVShows.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport axios from \"axios\";\nimport MovieCard from \"../components/MovieCard\";\nimport \"../styles/TVShows.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TVShows = () => {\n  _s();\n  const [tvShows, setTvShows] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const tvShowsRef = useRef(null);\n  useEffect(() => {\n    const fetchTvShows = async () => {\n      try {\n        setLoading(true);\n        const res = await axios.get(\"http://localhost:5004/tvShows\");\n        setTvShows(res.data || []);\n      } catch (err) {\n        setError(\"Failed to fetch TV Shows.\");\n        console.error(\"Error:\", err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchTvShows();\n  }, []);\n\n  // Group TV shows by language\n  const groupByLanguage = items => {\n    return items.reduce((acc, item) => {\n      const language = item.language || \"Unknown\";\n      if (!acc[language]) {\n        acc[language] = [];\n      }\n      acc[language].push(item);\n      return acc;\n    }, {});\n  };\n\n  // Scroll functionality\n  const scroll = (ref, direction) => {\n    if (ref.current) {\n      const scrollAmount = direction === \"left\" ? -500 : 500;\n      ref.current.scrollLeft += scrollAmount;\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"error\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 21\n  }, this);\n  const tvShowsByLanguage = groupByLanguage(tvShows);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tvshows-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"All TV Shows\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movies-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"scroll-arrow scroll-arrow-left\",\n        onClick: () => scroll(tvShowsRef, \"left\"),\n        children: \"<\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movies-grid\",\n        ref: tvShowsRef,\n        children: tvShows.map(show => /*#__PURE__*/_jsxDEV(MovieCard, {\n          id: show.id,\n          poster: show.poster,\n          type: \"tvshow\"\n        }, show.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"scroll-arrow scroll-arrow-right\",\n        onClick: () => scroll(tvShowsRef, \"right\"),\n        children: \">\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), Object.keys(tvShowsByLanguage).map(language => /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [language, \" TV Shows\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movies-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"scroll-arrow scroll-arrow-left\",\n          onClick: () => scroll(tvShowsRef, \"left\"),\n          children: \"<\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movies-grid\",\n          ref: tvShowsRef,\n          children: tvShowsByLanguage[language].map(show => /*#__PURE__*/_jsxDEV(MovieCard, {\n            id: show.id,\n            poster: show.poster,\n            type: \"tvshow\"\n          }, show.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"scroll-arrow scroll-arrow-right\",\n          onClick: () => scroll(tvShowsRef, \"right\"),\n          children: \">\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)]\n    }, language, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(TVShows, \"ZBUQGdYfy/fYw0VFmtNd1kWxZic=\");\n_c = TVShows;\nexport default TVShows;\nvar _c;\n$RefreshReg$(_c, \"TVShows\");","map":{"version":3,"names":["React","useEffect","useState","useRef","axios","MovieCard","jsxDEV","_jsxDEV","TVShows","_s","tvShows","setTvShows","loading","setLoading","error","setError","tvShowsRef","fetchTvShows","res","get","data","err","console","groupByLanguage","items","reduce","acc","item","language","push","scroll","ref","direction","current","scrollAmount","scrollLeft","children","fileName","_jsxFileName","lineNumber","columnNumber","className","tvShowsByLanguage","onClick","map","show","id","poster","type","Object","keys","_c","$RefreshReg$"],"sources":["/Users/virajparekh/cjv805/stream-go/src/pages/TVShows.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport axios from \"axios\";\nimport MovieCard from \"../components/MovieCard\";\nimport \"../styles/TVShows.css\";\n\nconst TVShows = () => {\n  const [tvShows, setTvShows] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const tvShowsRef = useRef(null);\n\n  useEffect(() => {\n    const fetchTvShows = async () => {\n      try {\n        setLoading(true);\n        const res = await axios.get(\"http://localhost:5004/tvShows\");\n        setTvShows(res.data || []);\n      } catch (err) {\n        setError(\"Failed to fetch TV Shows.\");\n        console.error(\"Error:\", err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchTvShows();\n  }, []);\n\n  // Group TV shows by language\n  const groupByLanguage = (items) => {\n    return items.reduce((acc, item) => {\n      const language = item.language || \"Unknown\";\n      if (!acc[language]) {\n        acc[language] = [];\n      }\n      acc[language].push(item);\n      return acc;\n    }, {});\n  };\n\n  // Scroll functionality\n  const scroll = (ref, direction) => {\n    if (ref.current) {\n      const scrollAmount = direction === \"left\" ? -500 : 500;\n      ref.current.scrollLeft += scrollAmount;\n    }\n  };\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p className=\"error\">{error}</p>;\n\n  const tvShowsByLanguage = groupByLanguage(tvShows);\n\n  return (\n    <div className=\"tvshows-page\">\n      <h2>All TV Shows</h2>\n      <div className=\"movies-container\">\n        <button\n          className=\"scroll-arrow scroll-arrow-left\"\n          onClick={() => scroll(tvShowsRef, \"left\")}\n        >\n          &lt;\n        </button>\n        <div className=\"movies-grid\" ref={tvShowsRef}>\n          {tvShows.map((show) => (\n            <MovieCard\n              key={show.id}\n              id={show.id}\n              poster={show.poster}\n              type=\"tvshow\"\n            />\n          ))}\n        </div>\n        <button\n          className=\"scroll-arrow scroll-arrow-right\"\n          onClick={() => scroll(tvShowsRef, \"right\")}\n        >\n          &gt;\n        </button>\n      </div>\n\n      {/* Language-Specific TV Shows Sections */}\n      {Object.keys(tvShowsByLanguage).map((language) => (\n        <section key={language}>\n          <h3>{language} TV Shows</h3>\n          <div className=\"movies-container\">\n            <button\n              className=\"scroll-arrow scroll-arrow-left\"\n              onClick={() => scroll(tvShowsRef, \"left\")}\n            >\n              &lt;\n            </button>\n            <div className=\"movies-grid\" ref={tvShowsRef}>\n              {tvShowsByLanguage[language].map((show) => (\n                <MovieCard\n                  key={show.id}\n                  id={show.id}\n                  poster={show.poster}\n                  type=\"tvshow\"\n                />\n              ))}\n            </div>\n            <button\n              className=\"scroll-arrow scroll-arrow-right\"\n              onClick={() => scroll(tvShowsRef, \"right\")}\n            >\n              &gt;\n            </button>\n          </div>\n        </section>\n      ))}\n    </div>\n  );\n};\n\nexport default TVShows;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}