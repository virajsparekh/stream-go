{"ast":null,"code":"var _jsxFileName = \"/Users/virajparekh/cjv805/stream-go/src/pages/Home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport MovieCard from \"../components/MovieCard\";\nimport DarkModeToggle from \"../components/DarkModeToggle\";\nimport \"../styles/Home.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [tvShows, setTvShows] = useState([]);\n  const [loading, setLoading] = useState(true); // Added loading state\n  const [error, setError] = useState(null); // Added error state\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        const [moviesRes, tvShowsRes] = await Promise.all([axios.get(\"http://localhost:5004/movies\"), axios.get(\"http://localhost:5004/tvShows\")]);\n        setMovies(moviesRes.data || []);\n        setTvShows(tvShowsRes.data || []);\n      } catch (err) {\n        setError(\"Failed to fetch data. Please try again later.\");\n        console.error(\"Error fetching data:\", err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  const groupByGenre = items => {\n    return items === null || items === void 0 ? void 0 : items.reduce((acc, item) => {\n      if (!item.genre) return acc; // Ensure genre exists\n      acc[item.genre] = acc[item.genre] ? [...acc[item.genre], item] : [item];\n      return acc;\n    }, {});\n  };\n  const moviesByGenre = groupByGenre(movies);\n  const tvShowsByGenre = groupByGenre(tvShows);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"error\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [/*#__PURE__*/_jsxDEV(DarkModeToggle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Movies & TV Shows\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movies-grid\",\n        children: movies.length > 0 ? movies.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n          id: movie.id,\n          poster: movie.poster\n        }, movie.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 35\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No movies available.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"TV Shows\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movies-grid\",\n        children: tvShows.length > 0 ? tvShows.map(show => /*#__PURE__*/_jsxDEV(MovieCard, {\n          id: show.id,\n          poster: show.poster\n        }, show.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 35\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No TV shows available.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), moviesByGenre && Object.keys(moviesByGenre).map(genre => {\n      var _moviesByGenre$genre, _tvShowsByGenre$genre;\n      return /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: genre.toUpperCase()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movies-grid\",\n          children: [(_moviesByGenre$genre = moviesByGenre[genre]) === null || _moviesByGenre$genre === void 0 ? void 0 : _moviesByGenre$genre.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n            id: movie.id,\n            poster: movie.poster\n          }, movie.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this)), (_tvShowsByGenre$genre = tvShowsByGenre[genre]) === null || _tvShowsByGenre$genre === void 0 ? void 0 : _tvShowsByGenre$genre.map(show => /*#__PURE__*/_jsxDEV(MovieCard, {\n            id: show.id,\n            poster: show.poster\n          }, show.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)]\n      }, genre, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"GpebFW662tOacH6IuW33Uy9dP6A=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","axios","MovieCard","DarkModeToggle","jsxDEV","_jsxDEV","Home","_s","movies","setMovies","tvShows","setTvShows","loading","setLoading","error","setError","fetchData","moviesRes","tvShowsRes","Promise","all","get","data","err","console","groupByGenre","items","reduce","acc","item","genre","moviesByGenre","tvShowsByGenre","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","map","movie","id","poster","show","Object","keys","_moviesByGenre$genre","_tvShowsByGenre$genre","toUpperCase","_c","$RefreshReg$"],"sources":["/Users/virajparekh/cjv805/stream-go/src/pages/Home.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport MovieCard from \"../components/MovieCard\";\nimport DarkModeToggle from \"../components/DarkModeToggle\";\nimport \"../styles/Home.css\";\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [tvShows, setTvShows] = useState([]);\n  const [loading, setLoading] = useState(true); // Added loading state\n  const [error, setError] = useState(null); // Added error state\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        const [moviesRes, tvShowsRes] = await Promise.all([\n          axios.get(\"http://localhost:5004/movies\"),\n          axios.get(\"http://localhost:5004/tvShows\"),\n        ]);\n        setMovies(moviesRes.data || []);\n        setTvShows(tvShowsRes.data || []);\n      } catch (err) {\n        setError(\"Failed to fetch data. Please try again later.\");\n        console.error(\"Error fetching data:\", err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const groupByGenre = (items) => {\n    return items?.reduce((acc, item) => {\n      if (!item.genre) return acc; // Ensure genre exists\n      acc[item.genre] = acc[item.genre] ? [...acc[item.genre], item] : [item];\n      return acc;\n    }, {});\n  };\n\n  const moviesByGenre = groupByGenre(movies);\n  const tvShowsByGenre = groupByGenre(tvShows);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p className=\"error\">{error}</p>;\n\n  return (\n    <div className=\"home\">\n      <DarkModeToggle />\n      <h2>Movies & TV Shows</h2>\n\n      <section>\n        <h3>Movies</h3>\n        <div className=\"movies-grid\">\n          {movies.length > 0 ? (\n            movies.map((movie) => <MovieCard key={movie.id} id={movie.id} poster={movie.poster} />)\n          ) : (\n            <p>No movies available.</p>\n          )}\n        </div>\n      </section>\n\n      <section>\n        <h3>TV Shows</h3>\n        <div className=\"movies-grid\">\n          {tvShows.length > 0 ? (\n            tvShows.map((show) => <MovieCard key={show.id} id={show.id} poster={show.poster} />)\n          ) : (\n            <p>No TV shows available.</p>\n          )}\n        </div>\n      </section>\n\n      {moviesByGenre &&\n        Object.keys(moviesByGenre).map((genre) => (\n          <section key={genre}>\n            <h3>{genre.toUpperCase()}</h3>\n            <div className=\"movies-grid\">\n              {moviesByGenre[genre]?.map((movie) => (\n                <MovieCard key={movie.id} id={movie.id} poster={movie.poster} />\n              ))}\n              {tvShowsByGenre[genre]?.map((show) => (\n                <MovieCard key={show.id} id={show.id} poster={show.poster} />\n              ))}\n            </div>\n          </section>\n        ))}\n    </div>\n  );\n};\n\nexport default Home;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}