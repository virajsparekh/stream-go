{"ast":null,"code":"var _jsxFileName = \"/Users/virajparekh/cjv805/stream-go/src/pages/Movies.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport MovieCard from \"../components/MovieCard\";\nimport \"../styles/Movies.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Movies = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        setLoading(true);\n        const res = await axios.get(\"http://localhost:5004/movies\");\n        setMovies(res.data || []);\n      } catch (err) {\n        setError(\"Failed to fetch movies.\");\n        console.error(\"Error:\", err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMovies();\n  }, []);\n\n  // Group movies by language\n  const groupByLanguage = items => {\n    return items.reduce((acc, item) => {\n      const language = item.language || \"Unknown\";\n      if (!acc[language]) {\n        acc[language] = [];\n      }\n      acc[language].push(item);\n      return acc;\n    }, {});\n  };\n\n  // Get random movies by language\n  const getRandomMovies = (movies, language, count = 5) => {\n    const filteredMovies = movies.filter(movie => movie.language === language);\n    return filteredMovies.sort(() => 0.5 - Math.random()).slice(0, count);\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"error\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 21\n  }, this);\n  const moviesByLanguage = groupByLanguage(movies);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movies-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"All Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), Object.keys(moviesByLanguage).map(language => /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Top 5 \", language, \" Movies\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movies-grid\",\n        children: getRandomMovies(moviesByLanguage[language], language).map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n          id: movie.id,\n          poster: movie.poster,\n          type: \"movie\"\n        }, movie.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, language, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)), movies.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No movies available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 31\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(Movies, \"6wevkd2F3PCn4cJR5qV0d4ozTn8=\");\n_c = Movies;\nexport default Movies;\nvar _c;\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"names":["React","useEffect","useState","axios","MovieCard","jsxDEV","_jsxDEV","Movies","_s","movies","setMovies","loading","setLoading","error","setError","fetchMovies","res","get","data","err","console","groupByLanguage","items","reduce","acc","item","language","push","getRandomMovies","count","filteredMovies","filter","movie","sort","Math","random","slice","children","fileName","_jsxFileName","lineNumber","columnNumber","className","moviesByLanguage","Object","keys","map","id","poster","type","length","_c","$RefreshReg$"],"sources":["/Users/virajparekh/cjv805/stream-go/src/pages/Movies.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport MovieCard from \"../components/MovieCard\";\nimport \"../styles/Movies.css\";\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        setLoading(true);\n        const res = await axios.get(\"http://localhost:5004/movies\");\n        setMovies(res.data || []);\n      } catch (err) {\n        setError(\"Failed to fetch movies.\");\n        console.error(\"Error:\", err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchMovies();\n  }, []);\n\n  // Group movies by language\n  const groupByLanguage = (items) => {\n    return items.reduce((acc, item) => {\n      const language = item.language || \"Unknown\";\n      if (!acc[language]) {\n        acc[language] = [];\n      }\n      acc[language].push(item);\n      return acc;\n    }, {});\n  };\n\n  // Get random movies by language\n  const getRandomMovies = (movies, language, count = 5) => {\n    const filteredMovies = movies.filter((movie) => movie.language === language);\n    return filteredMovies\n      .sort(() => 0.5 - Math.random())\n      .slice(0, count);\n  };\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p className=\"error\">{error}</p>;\n\n  const moviesByLanguage = groupByLanguage(movies);\n\n  return (\n    <div className=\"movies-page\">\n      <h2>All Movies</h2>\n\n      {/* Render movies grouped by language */}\n      {Object.keys(moviesByLanguage).map((language) => (\n        <section key={language}>\n          <h3>Top 5 {language} Movies</h3>\n          <div className=\"movies-grid\">\n            {getRandomMovies(moviesByLanguage[language], language).map((movie) => (\n              <MovieCard\n                key={movie.id}\n                id={movie.id}\n                poster={movie.poster}\n                type=\"movie\"\n              />\n            ))}\n          </div>\n        </section>\n      ))}\n\n      {/* Fallback if no movies are available */}\n      {movies.length === 0 && <p>No movies available.</p>}\n    </div>\n  );\n};\n\nexport default Movies;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}